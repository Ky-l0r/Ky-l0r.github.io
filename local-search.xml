<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>[Unity]制作开始菜单</title>
    <link href="/2024/08/05/Unity-%E5%88%B6%E4%BD%9C%E5%BC%80%E5%A7%8B%E8%8F%9C%E5%8D%95/"/>
    <url>/2024/08/05/Unity-%E5%88%B6%E4%BD%9C%E5%BC%80%E5%A7%8B%E8%8F%9C%E5%8D%95/</url>
    
    <content type="html"><![CDATA[<h1 id="1、创建UI元素"><a href="#1、创建UI元素" class="headerlink" title="1、创建UI元素"></a>1、创建UI元素</h1><p>首先，你需要在Unity的层级视图中创建空对象，在空对象中创建一个Canvas（如果还没有的话），然后在Canvas下创建两个Button组件，分别命名为<code>Start</code>和<code>Quit</code>。<img src="D:\剪辑\Boke\Blog\source\_posts\Unity-制作开始菜单\1.png" alt="1" style="zoom: 80%;" />（如图</p><h1 id="2、设置按钮文本"><a href="#2、设置按钮文本" class="headerlink" title="2、设置按钮文本"></a>2、设置按钮文本</h1><p>选中每个Button，在层级视图中找到Text组件（如果没有，你可能需要添加一个），并设置其Text属性为“开始”和“退出”。</p><!--若键入中文后无法正常显示，可在C:\Windows\Fonts中将微软雅黑复制到项目中，并创建字体资产，将资产拖动到text检查器的Font Asset一栏中--><h1 id="3、-编写脚本处理点击事件"><a href="#3、-编写脚本处理点击事件" class="headerlink" title="3、 编写脚本处理点击事件"></a>3、 编写脚本处理点击事件</h1><p>在资产中新建一个C#脚本，重命名为<code>开始菜单</code>，键入以下代码</p><p>&#96;</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> UnityEngine;<br><span class="hljs-keyword">using</span> UnityEngine.SceneManagement;<br><span class="hljs-keyword">using</span> UnityEngine.UI; <span class="hljs-comment">// 引入UI命名空间  </span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> 开始菜单 : <span class="hljs-title">MonoBehaviour</span><br>&#123;<br>    <span class="hljs-keyword">public</span> Button startButton;<br>    <span class="hljs-keyword">public</span> Button exitButton;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Start</span>()</span><br>    &#123;<br>        <span class="hljs-comment">// 设置按钮点击事件  </span><br>        startButton.onClick.AddListener(LoadGameScene);<br>        exitButton.onClick.AddListener(QuitGame);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">LoadGameScene</span>()</span><br>    &#123;<br>        <span class="hljs-comment">// 假设你要加载的场景名为&quot;GameScene&quot;  </span><br>        SceneManager.LoadScene(<span class="hljs-number">1</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">QuitGame</span>()</span><br>    &#123;<br>        <span class="hljs-comment">// 判断是否在Unity编辑器中  </span><br>    <span class="hljs-meta">#<span class="hljs-keyword">if</span> UNITY_EDITOR</span><br>        UnityEditor.EditorApplication.isPlaying = <span class="hljs-literal">false</span>;<br>    <span class="hljs-meta">#<span class="hljs-keyword">else</span></span><br>        Application.Quit();  <br>    <span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>&#96;</p><p>Ctrl+s保存</p><h1 id="4-将脚本附加到创建的空对象上"><a href="#4-将脚本附加到创建的空对象上" class="headerlink" title="4. 将脚本附加到创建的空对象上"></a>4. 将脚本附加到创建的空对象上</h1><p>将这个脚本附加到空对象的UI元素上。</p><h1 id="5-在检查器中设置按钮引用"><a href="#5-在检查器中设置按钮引用" class="headerlink" title="5. 在检查器中设置按钮引用"></a>5. 在检查器中设置按钮引用</h1><p>在检查器视图中，找到附加了<code>开始菜单</code>脚本的组件，并将Start和Quit的引用拖拽到脚本的对应字段中。</p><h1 id="6-测试"><a href="#6-测试" class="headerlink" title="6. 测试"></a>6. 测试</h1><p>现在，你可以运行游戏并测试你的开始菜单了。点击“开始”按钮应该加载新的游戏场景，点击“退出”按钮则应该退出游戏（在编辑器中停止播放）。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Unity</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
